// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

// belongs to 1 customer
// Can have many cart items
model Cart {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now())
  isCheckedOut Boolean    @default(false)
  customer     Customer   @relation(fields: [customerId], references: [id])
  customerId   Int
  cartItems    CartItem[]
}

// belongs to 1 cart, 1 customer & can have 1 product of X qty
model CartItem {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
  cart       Cart?    @relation(fields: [cartId], references: [id])
  cartId     Int?
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  quantity   Int
  price      Int // price in cents
}

// Can have many products
model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

// Can have many carts, can have many carts per user
model Customer {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  address   String?
  name      String?
  carts     Cart[]
  cartItems CartItem[]
}

// Can belong to many cart items
// belongs to 1 category
model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  price       Int // price in cents
  sku         Int
  stockLevel  Int
  expiresAt   DateTime
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  Int
  cartItems   CartItem[]
}
